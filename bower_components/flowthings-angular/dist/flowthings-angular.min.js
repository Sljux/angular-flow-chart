angular.module("flowthings",[]).factory("ftBackend",function(){if(typeof require==="function"&&typeof exports==="object"){return require("flowthings-browser")}else if(typeof flowthings==="object"){return flowthings}else{throw new Error("flowthings-browser required")}}).factory("ftRequest",["$http",function(n){return function(t,e){if(t.params&&(t.params.timeout||t.params.cache)){t.params=angular.extend({},t.params);t.timeout=t.params.timeout;t.cache=t.params.cache;delete t.params.timeout;delete t.params.cache}n(t).then(function(n){e(null,n.data)}).catch(function(n){e(n)})}}]).value("ftWebSocket",WebSocket).provider("flowthings",function(){var n=this;n.options={};n.$get=["ftBackend","ftRequest","ftWebSocket","$q","$rootScope",function(t,e,o,r,a){var s=angular.extend({},t.options,n.options,{transform:function(n){return r(function(t,e){n(function(n,o){if(n!=null){e(n)}else{t(o)}if(a.$$phase==null){a.$apply()}})})},serializer:{stringify:angular.toJson,parse:JSON.parse}});var i=t.APIClient(s,e,o);var u=i.ws.connect;var c=i.ws.subscribe;i.ws.connect=function(){return u().then(function(n){n.onopen=function(){a.$broadcast("flowthings:open",n)};n.onerror=function(){a.$broadcast("flowthings:error")};n.onclose=function(n){a.$broadcast("flowthings:close",n)};return n})};i.ws.subscribe=function(n,t,e){var o=e?e.$on("$destroy",r):angular.noop;function r(){o();return i.ws.unsubscribe(n,s)}function s(n){a.$apply(function(){t(n)})}return{result:c(n,s),unsubscribe:r}};return i}]});